# http://yaml.kwiki.org/index.cgi?YtsBasicTests

---
type: meta
brief: |
    These are the basic set of tests.
default-type: load-expect
perl: fails
python: fails
ruby: fails

---
name: Simple Sequence
brief: |
    You can specify a list in YAML by placing each
    member of the list on a new line with an opening
    dash. These lists are called sequences.
yaml: |
    - apple
    - banana
    - carrot
perl: |
    ['apple', 'banana', 'carrot'] 
python: |
    [ 
        ['apple', 'banana', 'carrot'] 
    ]
ruby: |
    ['apple', 'banana', 'carrot'] 

---
name: Nested Sequences
brief: |
    You can include a sequence within another
    sequence by giving the sequence an empty
    dash, followed by an indented list.
yaml: |
    -
     - foo
     - bar
     - baz
perl: |
    [['foo', 'bar', 'baz']]
python: |
    [
        [['foo', 'bar', 'baz']]
    ]
ruby: |
    [['foo', 'bar', 'baz']]

---
name: Mixed Sequences
brief: |
    Sequences can contain any YAML data,
    including strings and other sequences.
yaml: |
    - apple
    -
     - foo
     - bar
     - x123
    - banana
    - carrot
perl: |
    ['apple', ['foo', 'bar', 'x123'], 'banana', 'carrot']
python: |
    [
        ['apple', ['foo', 'bar', 'x123'], 'banana', 'carrot']
    ]
ruby: |
    ['apple', ['foo', 'bar', 'x123'], 'banana', 'carrot']

---
name: Deeply Nested Sequences
brief: |
    Sequences can be nested even deeper, with each
    level of indentation representing a level of
    depth.
yaml: |
    -
     -
      - uno
      - dos
perl: |
    [[['uno', 'dos']]]
python: |
    [
        [[['uno', 'dos']]]
    ]
ruby: |
    [[['uno', 'dos']]]

---
name: Simple Mapping
brief: |
    You can add a keyed list (also known as a dictionary or
    hash) to your document by placing each member of the
    list on a new line, with a colon seperating the key
    from its value.  In YAML, this type of list is called
    a mapping.
yaml: |
    foo: whatever
    bar: stuff
perl: |
    { foo => 'whatever', bar => 'stuff' }
python: |
    [
        {'foo': 'whatever', 'bar': 'stuff'}
    ]
ruby: |
    { 'foo' => 'whatever', 'bar' => 'stuff' }

---
name: Sequence in a Mapping
brief: |
    A value in a mapping can be a sequence.
yaml: |
    foo: whatever
    bar:
     - uno
     - dos
perl: |
    { foo => 'whatever', bar => [ 'uno', 'dos' ] }
python: |
    [
        {'foo': 'whatever', 'bar': ['uno', 'dos']}
    ]
ruby: |
    { 'foo' => 'whatever', 'bar' => [ 'uno', 'dos' ] }

---
name: Nested Mappings
brief: |
    A value in a mapping can be another mapping.
yaml: |
    foo: whatever
    bar:
     fruit: apple
     name: steve
     sport: baseball
perl: |
    { foo => 'whatever', 
      bar => {
         fruit => 'apple', 
         name => 'steve',
         sport => 'baseball'
       }
    }
python: |
    [
        {'foo': 'whatever', 
         'bar': {
            'fruit': 'apple', 
            'name': 'steve',
            'sport': 'baseball'
            }
        }
    ]
ruby: |
    { 'foo' => 'whatever', 
      'bar' => {
         'fruit' => 'apple', 
         'name' => 'steve',
         'sport' => 'baseball'
       }
    }

---
name: Mixed Mapping
brief: |
    A mapping can contain any assortment
    of mappings and sequences as values.
yaml: |
    foo: whatever
    bar:
     -
      fruit: apple
      name: steve
      sport: baseball
     - more
     -
      python: rocks
      perl: papers
      ruby: scissorses
perl: |
    { foo => 'whatever', 
      bar => [
        {
            fruit => 'apple', 
            name => 'steve',
            sport => 'baseball'
        },
        'more',
        {
            python => 'rocks',
            perl => 'papers',
            ruby => 'scissorses'
        }
      ]
    }
python: |
    [
        {'foo': 'whatever', 
         'bar': [
            {
                'fruit': 'apple', 
                'name': 'steve',
                'sport': 'baseball'
            },
            'more',
            {
                'python': 'rocks',
                'perl':  'papers',
                'ruby': 'scissorses'
            }
         ]
        }
    ]
ruby: |
    { 'foo' => 'whatever', 
      'bar' => [
        {
            'fruit' => 'apple', 
            'name' => 'steve',
            'sport' => 'baseball'
        },
        'more',
        {
            'python' => 'rocks',
            'perl' => 'papers',
            'ruby' => 'scissorses'
        }
      ]
    }

---
name: Sequence-Mapping Shortcut
brief: |
     If you are adding a mapping to a sequence, you
     can place the mapping on the same line as the
     dash as a shortcut.
yaml: |
     - work on YAML.py:
        - work on Store
perl: |
    [ { 'work on YAML.py' => ['work on Store'] } ]
python: |
    [
        [ {'work on YAML.py': ['work on Store']} ]
    ]
ruby: |
    [ { 'work on YAML.py' => ['work on Store'] } ]
